// <auto-generated />
using System;
using Iventis.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Iventis.Infrastructure.Migrations
{
    [DbContext(typeof(IventisContext))]
    partial class IventisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Iventis.Domain.Entities.Entregador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagemCnh")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumeroCnh")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoCnh")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.HasIndex("NumeroCnh")
                        .IsUnique();

                    b.ToTable("Entregador", (string)null);
                });

            modelBuilder.Entity("Iventis.Domain.Entities.Locacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DtInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DtPrevisaoTermino")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DtTermino")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EntregadorId")
                        .HasColumnType("uuid");

                    b.Property<string>("IdentificadorEntregador")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdentificadorMoto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("MotoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Plano")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EntregadorId");

                    b.HasIndex("MotoId");

                    b.ToTable("Locacao", (string)null);
                });

            modelBuilder.Entity("Iventis.Domain.Entities.Moto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.ToTable("Moto", (string)null);
                });

            modelBuilder.Entity("Iventis.Domain.Entities.Locacao", b =>
                {
                    b.HasOne("Iventis.Domain.Entities.Entregador", "Entregador")
                        .WithMany("Locacoes")
                        .HasForeignKey("EntregadorId")
                        .IsRequired();

                    b.HasOne("Iventis.Domain.Entities.Moto", "Moto")
                        .WithMany("Locacoes")
                        .HasForeignKey("MotoId")
                        .IsRequired();

                    b.Navigation("Entregador");

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("Iventis.Domain.Entities.Entregador", b =>
                {
                    b.Navigation("Locacoes");
                });

            modelBuilder.Entity("Iventis.Domain.Entities.Moto", b =>
                {
                    b.Navigation("Locacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
